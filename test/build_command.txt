g++ -O3 -Wall -shared -std=c++11 -fPIC $(python3 -m pybind11 --includes) GraphMetNetwork.cpp test_main.cpp -o graphmetnetwork$(python3-config --extension-suffix)

OrderedDict([('graphnet.embed_charge.weight',
              tensor([[ 0.9152, -1.0589, -0.9910,  0.0120, -1.2543,  0.2998, -0.3684, -0.0260],
                      [ 1.1699, -1.1929, -0.4268, -0.7047, -0.3582,  0.5368,  1.0060, -0.7781],
                      [-1.1897, -0.7680,  0.9429,  0.2915, -0.2274, -1.3632,  0.6982,  0.4960]],
                     device='cuda:0')),
             ('graphnet.embed_pdgid.weight',
              tensor([[-2.0383, -0.3847, -0.2413,  0.9122, -0.4805,  0.2302, -0.4746,  0.9317],
                      [-0.4117,  1.3556,  0.8550,  0.9977, -0.1622,  1.0582, -0.3220, -0.1858],
                      [ 0.3344, -1.7237,  0.2500,  0.0249, -1.0838, -0.7614, -0.2512, -1.4239],
                      [-0.0926,  0.4536, -0.2328,  1.5914, -0.3767, -1.6118,  0.4281,  0.3517],
                      [-0.8126, -1.1399, -0.2381, -0.4232,  0.0113, -1.9791, -0.4646, -1.3267],
                      [ 0.1623,  0.1171, -0.4400,  0.8133, -1.5196,  2.1547,  1.1111, -1.5128],
                      [-2.0250,  0.8894,  1.1295, -1.7737, -1.0402, -1.3035, -0.5598, -0.0130]],
                     device='cuda:0')),
             ('graphnet.embed_continuous.0.weight',
              tensor([[-0.5198,  0.2914, -0.0195,  0.3422, -0.2245,  0.1846],
                      [-0.4170, -0.1938, -0.2800, -0.0356, -0.1603,  0.1396],
                      [-0.1805, -0.1111, -0.2351, -0.1149, -0.1347, -0.4671],
                      [-0.0910,  0.0320, -0.1111,  0.0798,  0.1879,  0.3672],
                      [-0.6301, -0.1794, -0.1667, -0.1458,  0.2014, -0.3199],
                      [ 0.3729, -0.0307,  0.0235, -0.0009,  0.2356, -0.4001],
                      [ 0.4726, -0.0510, -0.1412,  0.1718, -0.1133,  0.1767],
                      [ 0.0455, -0.0182,  0.0487,  0.1988,  0.2355,  0.2938],
                      [-0.4597, -0.1802, -0.3717, -0.1472, -0.2679,  0.3283],
                      [ 0.1232, -0.3369, -0.2100, -0.1797, -0.0018, -0.0094],
                      [ 0.1715, -0.1470,  0.1426,  0.0312,  0.2539,  0.0015],
                      [-0.3559,  0.0914,  0.3528,  0.0387, -0.0992, -0.1014],
                      [ 0.0626, -0.3333, -0.3364,  0.2583, -0.2236,  0.3076],
                      [-0.3306,  0.0552, -0.1572, -0.3771,  0.0157, -0.1987],
                      [-0.5702,  0.0018, -0.0113,  0.0562,  0.0509,  0.2252],
                      [-0.1714, -0.1777, -0.0817,  0.4233,  0.2242,  0.0200]],
                     device='cuda:0')),
             ('graphnet.embed_continuous.0.bias',
              tensor([-0.0312, -0.0513,  0.0871, -0.4233,  0.3713,  0.3164, -0.2843, -0.0918,
                      -0.2188,  0.1339, -0.3240, -0.1274,  0.3631, -0.1676,  0.0605, -0.1710],
                     device='cuda:0')),
             ('graphnet.embed_categorical.0.weight',
              tensor([[-0.0787, -0.0563, -0.1187, -0.0364,  0.0204, -0.0530, -0.0219, -0.0296,
                       -0.2251, -0.2356,  0.0370, -0.0782, -0.1382,  0.1767, -0.0165,  0.2262],
                      [-0.0575, -0.1516, -0.0365,  0.0038,  0.0891, -0.0344, -0.1733, -0.1619,
                        0.1107, -0.0988, -0.1742, -0.2053,  0.0889, -0.0024,  0.2635,  0.0226],
                      [ 0.2004, -0.1992, -0.1722,  0.1961, -0.0091,  0.1812, -0.1146,  0.1062,
                       -0.0154, -0.0732, -0.0107, -0.1211, -0.2591, -0.1848, -0.0331, -0.1862],
                      [-0.1694,  0.1556,  0.0168, -0.2313,  0.1960,  0.2253,  0.0212, -0.1933,
                        0.2024,  0.0875,  0.2323, -0.2126,  0.0847,  0.2396, -0.1411,  0.1251],
                      [ 0.0096, -0.0461, -0.1193, -0.1401,  0.2030,  0.0507, -0.0611,  0.1324,
                        0.0453, -0.1501, -0.0281, -0.1880, -0.0830,  0.1241,  0.0882, -0.1818],
                      [ 0.2564,  0.0326,  0.0949,  0.1497, -0.1188, -0.0616,  0.2600, -0.0207,
                        0.1580,  0.1504,  0.0013, -0.2296,  0.1014,  0.1114, -0.2033,  0.0620],
                      [ 0.0681, -0.0902,  0.0503,  0.1344, -0.0446, -0.2366, -0.0779, -0.1133,
                        0.1727, -0.0132,  0.2520, -0.2005, -0.1813, -0.0109,  0.1670,  0.1771],
                      [ 0.1508,  0.1879,  0.0886,  0.0426,  0.1693, -0.1343,  0.0458, -0.1371,
                       -0.2286,  0.0853, -0.1171,  0.2315, -0.1872, -0.1182,  0.2166,  0.0972],
                      [ 0.1155,  0.1152, -0.2222, -0.0766,  0.0640, -0.2301, -0.0113,  0.1842,
                       -0.2519,  0.2597, -0.0399, -0.1806, -0.2088,  0.0780,  0.1366,  0.1855],
                      [ 0.0719,  0.0393,  0.0571, -0.0977, -0.0489,  0.2211, -0.0098,  0.0823,
                        0.1218, -0.0125,  0.0650, -0.2163,  0.2223,  0.0123, -0.1171, -0.1069],
                      [-0.0420,  0.0205, -0.0244,  0.1441, -0.0200, -0.0795,  0.0024,  0.2159,
                        0.1760,  0.1429,  0.0565, -0.1157, -0.0979,  0.1854,  0.0518, -0.2142],
                      [-0.0606,  0.0532, -0.1870,  0.1019,  0.1149,  0.1593,  0.0366, -0.2269,
                        0.0499, -0.1661, -0.1157, -0.1843,  0.1564, -0.0483,  0.1760,  0.1629],
                      [-0.1917, -0.2454, -0.1746,  0.0616, -0.1043, -0.1977, -0.0618,  0.1129,
                       -0.0261,  0.2283,  0.2088,  0.0397, -0.1768,  0.0630, -0.1193,  0.1926],
                      [ 0.0132,  0.1654,  0.1472,  0.0180, -0.2582,  0.2016, -0.0596, -0.1718,
                       -0.1537,  0.2106,  0.1356, -0.0096,  0.0643,  0.0652, -0.1648,  0.2329],
                      [-0.1621, -0.0787, -0.1285, -0.1518, -0.0752, -0.0572,  0.1987,  0.0454,
                        0.1367,  0.1637, -0.1557,  0.0120,  0.0559,  0.1623,  0.0850, -0.0030],
                      [ 0.2437, -0.1343,  0.0039, -0.1591,  0.1778,  0.2414, -0.2237, -0.0078,
                       -0.1415, -0.0833, -0.1674, -0.0289, -0.1771,  0.1508, -0.1112, -0.1199]],
                     device='cuda:0')),
             ('graphnet.embed_categorical.0.bias',
              tensor([ 0.0177,  0.0115, -0.2634,  0.1663, -0.0457, -0.1453, -0.1966,  0.2019,
                       0.1508,  0.1544, -0.2295,  0.0437, -0.0749, -0.0473,  0.1372,  0.2396],
                     device='cuda:0')),
             ('graphnet.encode_all.0.weight',
              tensor([[-0.0824,  0.1002,  0.1671,  ..., -0.0405, -0.0306, -0.0481],
                      [ 0.0017,  0.1078, -0.1271,  ..., -0.1374,  0.1322,  0.0902],
                      [ 0.1826, -0.1251, -0.0991,  ...,  0.0467, -0.1638, -0.0425],
                      ...,
                      [ 0.0923, -0.0543, -0.0378,  ...,  0.1686,  0.1135, -0.0553],
                      [-0.1540, -0.0217,  0.0828,  ...,  0.0877,  0.0866,  0.0072],
                      [-0.1034, -0.0528, -0.0888,  ..., -0.0109, -0.0097, -0.1030]],
                     device='cuda:0')),
             ('graphnet.encode_all.0.bias',
              tensor([ 0.0819,  0.0416,  0.3016,  0.1200, -0.0896, -0.0943, -0.1135,  0.0494,
                       0.1300,  0.1831, -0.1369, -0.1985, -0.0027, -0.1722, -0.1303, -0.0850,
                       0.0559,  0.0876, -0.1927,  0.1093,  0.1183,  0.0760,  0.0119,  0.0898,
                       0.0099,  0.2143, -0.0117,  0.0417, -0.1255,  0.1992,  0.0699,  0.1225],
                     device='cuda:0')),
             ('graphnet.bn_all.weight',
              tensor([0.9923, 0.9594, 0.9537, 1.0028, 1.1002, 1.0385, 1.0134, 0.9704, 1.0419,
                      0.9487, 0.9355, 0.9831, 1.0129, 0.9872, 1.0009, 0.9825, 1.0314, 0.9836,
                      1.0089, 0.9738, 0.9830, 0.9930, 1.0456, 0.9889, 1.0427, 1.0131, 1.0451,
                      1.0025, 0.9616, 0.9886, 0.9647, 0.9468], device='cuda:0')),
             ('graphnet.bn_all.bias',
              tensor([ 0.0294, -0.1186,  0.1331,  0.1048,  0.0914,  0.0490, -0.1401,  0.1369,
                      -0.1369, -0.0663,  0.1817,  0.0695, -0.1274,  0.1742, -0.1426, -0.1760,
                      -0.1800, -0.0671,  0.1306, -0.1225,  0.1487,  0.2012,  0.0886, -0.1728,
                       0.0197,  0.2282,  0.0185, -0.1782,  0.1252, -0.1191, -0.0005,  0.2215],
                     device='cuda:0')),
             ('graphnet.bn_all.running_mean',
              tensor([ 0.1706, -0.0297,  0.3226,  0.2559, -0.0447,  0.0964, -0.2841,  0.1077,
                       0.0779,  0.1106, -0.3209, -0.2656,  0.2375, -0.1043, -0.0970,  0.0286,
                      -0.0470,  0.0776, -0.2384,  0.0796,  0.0924,  0.5141,  0.0160,  0.1758,
                       0.0478,  0.0885,  0.1992,  0.0821, -0.0447,  0.4201,  0.1252,  0.1072],
                     device='cuda:0')),
             ('graphnet.bn_all.running_var',
              tensor([0.0807, 0.0060, 0.0292, 0.0206, 0.0027, 0.0244, 0.0203, 0.0400, 0.0219,
                      0.0466, 0.0058, 0.0196, 0.0438, 0.0097, 0.0335, 0.0225, 0.0029, 0.0157,
                      0.0498, 0.0556, 0.0656, 0.0396, 0.0122, 0.0478, 0.0439, 0.0479, 0.0034,
                      0.0210, 0.0143, 0.0307, 0.0315, 0.0655], device='cuda:0')),
             ('graphnet.bn_all.num_batches_tracked',
              tensor(1547768, device='cuda:0')),
             ('graphnet.conv_continuous.0.0.nn.0.weight',
              tensor([[-0.0572, -0.0712, -0.0804,  ..., -0.0655, -0.1202, -0.1024],
                      [ 0.0914,  0.0417,  0.0410,  ...,  0.0621,  0.0243, -0.0179],
                      [-0.0631,  0.0470, -0.0616,  ...,  0.0208,  0.0840, -0.0131],
                      ...,
                      [-0.0438,  0.0505, -0.1280,  ..., -0.1271, -0.0480, -0.0774],
                      [ 0.1099,  0.0429, -0.0642,  ...,  0.0995,  0.0639, -0.0300],
                      [ 0.0573, -0.1065,  0.0176,  ...,  0.1028, -0.0480, -0.1150]],
                     device='cuda:0')),
             ('graphnet.conv_continuous.0.0.nn.0.bias',
              tensor([-0.1704, -0.0006,  0.0746,  0.1750,  0.0991,  0.0825, -0.0736,  0.1520,
                      -0.2383, -0.1679,  0.1877,  0.1133,  0.0496,  0.1732, -0.0173, -0.1551,
                       0.0876, -0.0205,  0.1291,  0.0257,  0.1774,  0.0649,  0.0647,  0.0317,
                      -0.1880,  0.0367, -0.1064, -0.1111,  0.0097, -0.0227, -0.0777,  0.0660],
                     device='cuda:0')),
             ('graphnet.conv_continuous.0.1.weight',
              tensor([1.0613, 1.0116, 1.0487, 0.9933, 1.0154, 1.0810, 1.0253, 1.0291, 1.0281,
                      1.0465, 0.9412, 1.0548, 1.1082, 1.0312, 1.0170, 1.0255, 1.0124, 0.9828,
                      1.0011, 1.0229, 1.0092, 1.0742, 1.0064, 1.0090, 1.0262, 1.0497, 1.0360,
                      1.0108, 1.0108, 1.0057, 1.0439, 0.9686], device='cuda:0')),
             ('graphnet.conv_continuous.0.1.bias',
              tensor([-0.0287, -0.1603,  0.1823,  0.1347,  0.1295,  0.0509, -0.1544,  0.1974,
                      -0.1716, -0.0694,  0.2191,  0.1133, -0.1371,  0.1720, -0.1636, -0.1867,
                      -0.1447, -0.0891,  0.1313, -0.1214,  0.1767,  0.2064,  0.1199, -0.1927,
                      -0.0022,  0.2186, -0.0260, -0.1692,  0.1487, -0.0623,  0.0181,  0.2237],
                     device='cuda:0')),
             ('graphnet.conv_continuous.0.1.running_mean',
              tensor([ 0.0630,  0.2241,  0.3400,  0.2675,  0.1893,  0.2180,  0.3376,  0.2844,
                       0.0558,  0.1802,  0.3598,  0.3026,  0.3303,  0.2022,  0.0700,  0.0928,
                       0.4512,  0.2077,  0.3137,  0.3514,  0.2163,  0.4595,  0.3335,  0.1816,
                      -0.0031,  0.4913,  0.1094,  0.1157,  0.3252,  0.1866,  0.0019,  0.3272],
                     device='cuda:0')),
             ('graphnet.conv_continuous.0.1.running_var',
              tensor([0.1196, 0.1893, 0.4683, 0.2620, 0.1410, 0.3270, 0.5172, 0.1104, 0.1125,
                      0.3054, 0.4895, 0.1548, 0.2282, 0.0951, 0.1421, 0.2600, 0.7066, 0.1930,
                      0.1766, 0.4946, 0.0816, 0.2979, 0.6663, 0.2055, 0.3287, 0.5137, 0.2063,
                      0.4251, 0.2645, 0.4067, 0.1502, 0.7304], device='cuda:0')),
             ('graphnet.conv_continuous.0.1.num_batches_tracked',
              tensor(1547768, device='cuda:0')),
             ('graphnet.conv_continuous.1.0.nn.0.weight',
              tensor([[-0.0720, -0.0866, -0.0367,  ...,  0.0486,  0.0093, -0.0275],
                      [-0.0118,  0.0290, -0.0501,  ...,  0.0166,  0.0183, -0.0175],
                      [ 0.0306,  0.0261,  0.0002,  ...,  0.1206, -0.0796, -0.0476],
                      ...,
                      [ 0.0428,  0.0372,  0.1029,  ...,  0.0164,  0.0603,  0.0139],
                      [ 0.0413, -0.0467, -0.1251,  ...,  0.0867, -0.0717,  0.0681],
                      [-0.1286,  0.0994,  0.0421,  ..., -0.0265,  0.0694,  0.0408]],
                     device='cuda:0')),
             ('graphnet.conv_continuous.1.0.nn.0.bias',
              tensor([-0.1454, -0.1933,  0.1318, -0.0242, -0.0554,  0.0439, -0.0753,  0.1040,
                      -0.2388,  0.0252, -0.1298,  0.0089,  0.1070, -0.0292, -0.1327, -0.0788,
                      -0.1675, -0.0735,  0.0325, -0.1196,  0.0891,  0.1010,  0.0253, -0.0781,
                      -0.1670, -0.0202, -0.0866, -0.0707, -0.0169, -0.1365,  0.1752,  0.0314],
                     device='cuda:0')),
             ('graphnet.conv_continuous.1.1.weight',
              tensor([1.1965, 1.2566, 1.1053, 1.0830, 1.1242, 1.1225, 1.1081, 1.1249, 1.0718,
                      1.0580, 1.1950, 1.1960, 1.0842, 1.0971, 1.0160, 1.0541, 1.1143, 1.0818,
                      1.1322, 1.0781, 1.0711, 1.1228, 1.0668, 1.0804, 1.1834, 1.1058, 1.2825,
                      1.0869, 1.1320, 1.0260, 0.9967, 1.0857], device='cuda:0')),
             ('graphnet.conv_continuous.1.1.bias',
              tensor([ 0.0052, -0.1752,  0.1841,  0.1443,  0.0983,  0.0150, -0.1401,  0.2052,
                      -0.1861, -0.1008,  0.3177,  0.1276, -0.1402,  0.1816, -0.1572, -0.2073,
                      -0.1772, -0.1478,  0.1647, -0.1150,  0.1594,  0.2058,  0.1336, -0.2053,
                      -0.0042,  0.1980, -0.0637, -0.1675,  0.1511, -0.1432,  0.0684,  0.2177],
                     device='cuda:0')),
             ('graphnet.conv_continuous.1.1.running_mean',
              tensor([-0.1168, -0.1603,  0.1748,  0.1794,  0.0709,  0.1779,  0.0395,  0.3390,
                       0.0147,  0.1149,  0.0883,  0.3052,  0.1736,  0.1574,  0.0164,  0.1730,
                       0.1222,  0.1048,  0.3430,  0.1092,  0.3576,  0.3486,  0.5608,  0.3145,
                      -0.2268,  0.2096,  0.1658,  0.1573,  0.2887,  0.1715,  0.7447,  0.2168],
                     device='cuda:0')),
             ('graphnet.conv_continuous.1.1.running_var',
              tensor([0.1029, 0.1057, 0.3594, 0.5108, 0.1587, 0.3606, 0.1509, 0.3542, 0.4352,
                      0.4158, 0.0926, 0.2904, 0.5329, 0.2763, 0.6401, 0.7127, 0.2649, 0.1717,
                      0.3497, 0.1531, 1.4177, 0.1628, 1.1111, 0.4315, 0.1891, 0.0838, 0.0897,
                      0.3203, 0.3620, 0.5244, 2.2843, 0.3078], device='cuda:0')),
             ('graphnet.conv_continuous.1.1.num_batches_tracked',
              tensor(1547768, device='cuda:0')),
             ('graphnet.output.0.weight',
              tensor([[-1.5599e-01, -1.3244e-02, -1.3670e-01, -5.6949e-02, -2.7375e-01,
                       -2.5336e-02, -1.0546e-01, -4.0593e-02,  1.2195e-01,  2.0914e-02,
                        8.1868e-02,  5.8809e-03, -3.5005e-02, -8.3066e-02,  1.0313e-01,
                        9.1293e-02,  4.8431e-02,  5.7066e-02,  7.5503e-02,  6.0517e-02,
                       -5.7531e-02,  7.3876e-03,  1.2300e-01, -3.0529e-02,  2.4837e-01,
                        1.1439e-01,  2.2638e-01,  1.8057e-01, -5.2733e-02,  1.6312e-01,
                       -2.9093e-02, -1.3805e-01],
                      [ 2.0522e-03, -1.2980e-01,  1.9843e-01,  1.5979e-01,  1.5782e-03,
                        2.2701e-01, -2.0787e-01,  2.8247e-01, -2.3325e-01, -2.9995e-01,
                        5.3057e-02,  2.2886e-01,  1.6938e-02,  1.7797e-01,  1.7411e-02,
                       -2.7790e-01, -8.9879e-02, -1.7873e-02,  3.2177e-01, -3.9112e-01,
                        2.2704e-01,  2.4911e-01, -6.3030e-02, -1.4372e-01,  1.5839e-01,
                        1.0155e-01,  3.9964e-01, -1.9504e-01,  1.9941e-01, -1.1548e-01,
                        5.4367e-02,  2.5947e-01],
                      [ 4.1090e-02,  3.9341e-02,  1.6147e-01,  1.9897e-01,  1.0743e-01,
                       -1.0116e-01,  9.1679e-02,  1.9156e-01,  2.2167e-02,  5.0456e-02,
                        7.8899e-02, -1.7079e-01, -1.1966e-01,  1.3530e-01, -1.6584e-01,
                       -1.2997e-01,  1.1125e-01, -6.5675e-02,  1.5639e-01,  1.2968e-01,
                        1.0776e-01,  1.0962e-01,  2.2358e-01, -1.2409e-01, -1.7797e-01,
                        1.6263e-01, -8.5739e-02,  4.8682e-02, -7.0963e-02,  1.0458e-02,
                        1.1131e-02,  8.7225e-02],
                      [-2.2126e-01, -3.3541e-01,  2.1148e-01,  4.2375e-02, -7.3712e-02,
                        1.3610e-01, -2.1809e-01,  1.4117e-01, -2.2810e-01, -1.8819e-01,
                        2.4607e-01,  3.7348e-01,  2.4842e-01,  4.3417e-01, -2.6597e-01,
                       -1.7069e-01, -1.6839e-01, -5.2772e-02,  3.4228e-01, -1.4041e-01,
                        9.0893e-02,  3.4902e-01, -8.7104e-02, -1.8302e-01, -5.1990e-02,
                        5.0805e-01,  2.0690e-01, -2.4281e-01,  2.6942e-01,  8.8062e-02,
                       -1.1052e-01,  1.2248e-01],
                      [ 5.8912e-02, -1.2960e-01, -8.0924e-03,  1.0797e-01,  5.7441e-02,
                        1.0048e-01, -2.6011e-02,  2.6538e-02,  1.7115e-01, -9.6650e-02,
                       -1.3975e-01, -1.8085e-01,  1.4362e-01, -6.2682e-02, -4.0193e-02,
                       -3.7618e-02, -1.5393e-02,  1.4534e-01,  1.1454e-01,  1.5886e-01,
                        1.6055e-01, -1.4832e-01, -4.9727e-02,  1.7731e-01, -1.6553e-01,
                       -5.3954e-02, -3.4738e-02, -3.8586e-03,  3.7578e-02, -5.9365e-02,
                       -4.8307e-03,  3.3420e-02],
                      [-2.9330e-01, -1.8035e-01,  1.7254e-01,  2.9704e-02,  2.4647e-02,
                        3.6587e-02, -1.6253e-01, -7.1142e-02,  1.2808e-01,  1.0927e-01,
                       -1.0437e-01, -4.8727e-02, -3.7278e-02,  2.2808e-01, -8.4573e-02,
                       -2.4996e-01, -2.6138e-01, -9.1159e-02, -3.4183e-02,  3.7001e-02,
                        1.3842e-01,  1.6883e-01, -5.2981e-02, -2.7565e-01, -5.9460e-02,
                        6.3458e-02,  7.5641e-02, -2.4266e-01,  1.7923e-01,  3.3595e-03,
                       -7.5836e-02, -2.6361e-02],
                      [-7.3452e-02, -3.5442e-01,  7.0410e-02,  4.9539e-02, -1.1002e-01,
                        9.2038e-02, -2.4782e-01,  4.9853e-02, -3.4224e-01,  9.3552e-03,
                        2.3987e-01,  1.0389e-01,  1.7373e-01,  3.7404e-01, -1.4854e-02,
                       -2.9908e-01, -2.9079e-01,  5.7824e-02,  1.3927e-03, -1.2550e-02,
                        2.2362e-01,  3.3901e-01,  7.7569e-02, -2.1281e-01, -2.4505e-01,
                        3.1785e-01,  1.8955e-01, -2.1132e-01,  2.7436e-01, -1.4065e-01,
                        7.0900e-02,  1.4314e-01],
                      [ 1.2304e-01,  4.2670e-02, -1.6342e-01, -3.3257e-01, -2.6892e-01,
                        2.0655e-01, -7.6296e-02, -1.9780e-01, -4.2058e-02,  9.8720e-02,
                        2.4260e-01, -6.8653e-02, -7.0552e-02, -1.8423e-01,  2.2140e-01,
                       -1.8069e-01, -3.9193e-01,  7.4422e-02, -1.2450e-01,  2.3678e-02,
                       -1.5111e-01,  4.3713e-02, -2.1691e-01, -7.1410e-02,  3.3251e-01,
                        7.2568e-02,  1.8064e-01,  6.0826e-02, -1.1438e-01, -5.3062e-02,
                       -2.7477e-02, -2.3022e-02],
                      [-1.1707e-01, -1.1344e-01, -1.8515e-01, -3.7956e-02,  2.0119e-01,
                        9.2630e-02,  7.3965e-03, -5.3228e-02,  8.9899e-02,  9.6625e-02,
                        9.7066e-02,  3.4623e-02, -8.4304e-03,  5.4420e-02,  4.1807e-02,
                        2.7775e-02,  1.5157e-01,  1.5959e-01, -1.1119e-02,  1.2004e-01,
                       -2.8626e-02,  4.9813e-02,  1.6595e-02,  1.6126e-01,  4.2604e-02,
                       -1.1485e-01, -9.5046e-04,  4.8445e-02,  2.1702e-05,  1.4019e-01,
                       -1.7640e-01,  1.7536e-01],
                      [-5.9261e-02, -2.0277e-02, -1.3439e-03,  5.7264e-03,  8.2752e-02,
                        5.3782e-02, -4.8103e-02, -2.5927e-02, -8.0256e-02,  1.5114e-01,
                       -1.1352e-01,  4.7293e-02,  1.4260e-01, -2.5008e-02,  1.4050e-01,
                        1.1484e-01,  3.5595e-02,  1.1344e-02, -4.3041e-02,  1.5411e-02,
                        8.4802e-02, -1.8654e-01, -2.2846e-01,  2.4324e-02, -9.2469e-02,
                        9.3957e-02,  1.5892e-01,  1.1066e-01, -1.4828e-01,  1.0546e-01,
                        1.4722e-01, -9.6509e-03],
                      [ 6.4302e-02, -1.7071e-01, -4.8383e-02, -2.0273e-01, -1.1446e-01,
                        1.5013e-01,  1.0172e-01, -1.1191e-02,  5.4274e-02, -3.0241e-02,
                       -5.0084e-02, -1.9140e-01,  9.5367e-03,  1.3870e-01,  9.3885e-02,
                       -2.2540e-02, -4.2487e-02, -6.3854e-02, -9.6144e-02,  1.1929e-02,
                       -7.0999e-02,  3.3783e-02, -2.0782e-02,  1.4875e-01,  1.4299e-01,
                       -2.1094e-02,  2.3498e-01,  7.6647e-03, -5.6564e-02,  6.4554e-02,
                        5.1093e-02, -4.6189e-02],
                      [ 6.1956e-02, -1.4332e-01,  6.0020e-02, -1.8207e-01, -8.4925e-02,
                        1.1589e-01,  1.6829e-01, -2.3386e-02, -5.4224e-03,  1.7902e-01,
                        9.3749e-02, -1.1386e-02,  1.4897e-02, -3.4069e-02, -2.3819e-02,
                        2.7106e-02,  7.7637e-02,  2.0315e-01, -1.8578e-02,  6.2269e-03,
                        1.2294e-01, -1.6897e-01, -3.0648e-02, -1.3427e-01, -8.5865e-02,
                       -1.5209e-01,  7.0122e-02,  1.8258e-01,  8.7959e-03,  2.0936e-01,
                        1.9659e-01,  1.1210e-01],
                      [ 2.3612e-01,  1.0247e-02, -7.1183e-02, -4.3291e-02,  1.0450e-01,
                        3.2396e-01, -1.9208e-01, -2.5001e-03, -7.7701e-02,  7.4952e-02,
                       -9.5868e-02,  1.7305e-01, -1.2406e-01,  1.8735e-01, -1.9968e-01,
                       -8.5916e-02, -6.3430e-03, -7.4598e-02,  2.9363e-01, -2.9919e-02,
                        1.8361e-01, -5.3581e-03,  8.8853e-02, -1.3254e-03,  3.0984e-01,
                        8.0149e-03,  1.4607e-01,  3.2092e-02,  1.4682e-01, -1.5072e-02,
                        1.8731e-01,  1.0454e-01],
                      [-9.2172e-02,  3.3645e-02, -2.2766e-01,  5.0822e-02,  9.9523e-02,
                        9.2717e-02,  7.8022e-02, -2.1060e-01, -7.2768e-02, -1.2609e-01,
                        2.2638e-02, -9.9392e-02,  1.9941e-02,  3.8977e-02,  1.6268e-01,
                       -1.0387e-01,  1.4506e-01,  1.8524e-01,  7.0657e-02,  5.3929e-02,
                        5.1589e-02,  1.3359e-01,  1.3966e-01, -8.2196e-02, -1.5192e-01,
                       -3.8124e-02,  6.1831e-03,  9.9824e-02, -6.6253e-02,  1.7459e-01,
                        1.0695e-01,  1.1999e-02],
                      [ 1.8863e-01,  1.2491e-01, -3.4440e-03,  8.0302e-02, -7.1904e-02,
                        4.3146e-02, -6.7346e-03,  5.5194e-02, -2.2000e-02,  1.5028e-01,
                       -3.3788e-02, -1.3236e-02, -5.0530e-02, -3.0306e-04,  1.0657e-01,
                        1.4551e-01,  8.5223e-02,  1.5866e-01,  1.0040e-01,  1.8225e-01,
                        3.2985e-02,  9.5781e-02,  1.0171e-01, -8.8423e-03, -1.0135e-01,
                       -6.2228e-02, -1.5066e-01, -8.2720e-02,  4.1512e-03, -1.1448e-01,
                       -1.3355e-01, -1.2150e-01],
                      [ 6.7922e-02,  1.2660e-03, -2.0317e-01, -2.9238e-01, -1.5208e-01,
                        2.1129e-01,  1.4550e-01,  6.6467e-02, -1.0763e-01,  8.9883e-02,
                        9.5132e-02, -1.8320e-01,  5.7835e-02, -2.0030e-03, -4.1549e-03,
                       -1.7533e-02,  1.1345e-01, -2.8151e-02, -1.0354e-01,  8.0778e-02,
                       -8.4691e-02, -8.9517e-02, -2.2098e-01,  1.2374e-01, -3.7925e-02,
                       -1.0231e-01,  2.3641e-01, -4.6626e-02,  1.1894e-01,  1.6920e-02,
                        4.3736e-03,  1.3202e-01]], device='cuda:0')),
             ('graphnet.output.0.bias',
              tensor([-0.1482,  0.2310,  0.1582,  0.2118, -0.1427,  0.2435,  0.0996, -0.2070,
                      -0.1553,  0.0136, -0.0458, -0.0912,  0.1787, -0.3149, -0.1577, -0.1590],
                     device='cuda:0')),
             ('graphnet.output.2.weight',
              tensor([[-0.2729,  0.3485,  0.2876,  0.4687, -0.1262,  0.2399,  0.4152, -0.4882,
                       -0.1926, -0.1931, -0.1232, -0.3861,  0.3304, -0.2170, -0.1341, -0.3201]],
                     device='cuda:0')),
             ('graphnet.output.2.bias', tensor([0.3963], device='cuda:0'))])